version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    ports:
      - ":2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    depends_on:
      zookeeper:
        condition: service_started
    image: confluentinc/cp-kafka
    container_name: kafka_container
    ports:
      - "9092:9092"
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'

  postgres:
    restart: on-failure
    container_name: postgres
    build:
      dockerfile: ./Dockerfile
      context: ./postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: root

  producer:
    container_name: producer
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      kafka:
        condition: service_started
    build:
      dockerfile: ./Dockerfile
      context: ../kafka-producer
    ports:
      - "8087:8080"

  consumer:
    depends_on:
      postgres:
        condition: service_started
      kafka:
        condition: service_started
    build:
      dockerfile: ./Dockerfile
      context: ../kafka-consumer
    ports:
      - ":8088"

  jmeter:
    depends_on:
      producer:
        condition: service_healthy
      consumer:
        condition: service_started
    image: justb4/jmeter
    volumes:
      - ./local-kafka-test.jmx:/jmeter/local-kafka-test.jmx
    command: -n -t /jmeter/local-kafka-test.jmx -l /jmeter/test-results.jtl

  kafka-connector:
    container_name: kafka-connect
    depends_on:
      postgres:
        condition: service_started
    build:
      dockerfile: ./Dockerfile
      context: ./kafka-connect
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka_container:29092
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components
